<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <springProfile name="dev"><property resource="application-dev.properties"/></springProfile>
    <springProfile name="st"><property resource="application-st.properties"/></springProfile>
    <springProfile name="pr"><property resource="application-pr.properties"/></springProfile>
    <springProfile name="local"><property resource="application-local.properties"/></springProfile>
    <property name="LOG_FILE_PATH" value="${log.file.path}" />
    <property name="LOG_FILE_NAME" value="${log.file.name}" />
    <property name="LOG_BACKUP_FILE_NAME" value="${log.backup.file.name}" />
    <property name="LOG_PATTERN" value="%-5level %d{yy-MM-dd HH:mm:ss.SSS}[%thread] [%logger{0}:%line] - %msg%n" />
    <springProperty name="PROFILE" scope="context" source="spring.profiles.active" />
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_FILE_PATH}_${PROFILE}/${LOG_FILE_NAME}</File>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE_PATH}_${PROFILE}/backup/${LOG_BACKUP_FILE_NAME}_%d{yyyy-MM-dd}_%i.zip</fileNamePattern>
            <maxFileSize>20MB</maxFileSize>
            <maxHistory>50</maxHistory>
            <totalSizeCap>1000MB</totalSizeCap>
        </rollingPolicy>
    </appender>
    <springProfile name="dev,st,pr">
        <root level="INFO">
            <appender-ref ref="FILE" />
        </root>
    </springProfile>
    <springProfile name="local">
        <root level="INFO">
            <appender-ref ref="CONSOLE" />
        </root>
    </springProfile>

    <!-- log4jdbc 옵션 설정 -->
    <logger name="jdbc" level="OFF"/>
    <!-- 커넥션 open close 이벤트를 로그로 남긴다. -->
    <logger name="jdbc.connection" level="OFF"/>
    <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
    <logger name="jdbc.sqlonly" level="OFF"/>
    <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
    <logger name="jdbc.sqltiming" level="DEBUG"/>
    <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
    <logger name="jdbc.audit" level="OFF"/>
    <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
    <logger name="jdbc.resultset" level="OFF"/>
    <!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
    <logger name="jdbc.resultsettable" level="OFF"/>
</configuration>
